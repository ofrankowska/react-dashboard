{"version":3,"sources":["assets/images/morning.jpg","assets/images/afternoon.jpg","assets/images/evening.jpg","components/Clock/Clock.js","styles/sizes.js","components/Message/MessageStyles.js","components/MyTextField/MyTextField.js","components/Message/Message.js","components/FocusWrapper/FocusCheckbox/FocusCheckbox.js","components/FocusWrapper/FocusCheckbox/FocusCheckboxStyles.js","components/FocusWrapper/FocusWrapperStyles.js","components/FocusWrapper/FocusWrapper.js","components/WeatherWidget/Weather/Weather.js","components/WeatherWidget/Weather/WeatherStyles.js","components/WeatherWidget/WeatherMetaForm/WeatherMetaForm.js","components/WeatherWidget/WeatherMetaForm/WeatherMetaFormStyles.js","components/LoadingSpinner/LoadingSpinner.js","components/LoadingSpinner/LoadingSpinnerStyles.js","components/WeatherWidget/WeatherWidget.js","components/Quote/Quote.js","components/Quote/QuoteStyles.js","components/QuoteWidget/QuoteWidget.js","components/QuoteWidget/QuoteWidgetStyles.js","components/ToDoWidget/ToDoList/NewToDoForm/NewToDoForm.js","components/ToDoWidget/ToDoList/NewToDoForm/NewToDoFormStyles.js","components/MyButton/MyButton.js","components/ToDoWidget/ToDoList/ToDo/ToDoMenu/ToDoMenu.js","components/ToDoWidget/ToDoList/ToDo/ToDoMenu/ToDoMenuStyles.js","components/ToDoWidget/ToDoList/ToDo/ToDo.js","components/ToDoWidget/ToDoList/ToDo/ToDoStyles.js","components/ToDoWidget/ToDoList/ToDoList.js","components/ToDoWidget/ToDoListMenu/ToDoListMenu.js","components/ToDoWidget/ToDoListMenu/ToDoListMenuStyles.js","components/ToDoWidget/ToDoWidget.js","components/ToDoWidget/ToDoWidgetStyles.js","views/DashboardView/DashboardViewStyles.js","views/DashboardView/DashboardView.js","components/Navigation/Navigation.js","components/Navigation/NavigationStyles.js","components/SortableQuoteList/SortableQuoteBox/SortableQuoteBoxStyles.js","components/SortableQuoteList/SortableQuoteBox/SortableQuoteBox.js","components/SortableQuoteList/SortableQuoteListStyles.js","components/SortableQuoteList/SortableQuoteList.js","views/FavoriteQuotesView/FavoriteQuotesView.js","views/FavoriteQuotesView/FavoriteQuotesViewStyles.js","views/Page.js","views/App.js","serviceWorker.js","index.js"],"names":["module","exports","Clock","hour","min","addZero","n","parseInt","size","xs","xm","md","lg","Message","fontSize","height","padding","opacity","transition","sizes","editBtn","position","MyTextField","withStyles","root","width","big","bottom","textAlign","color","fontWeight","display","borderBottom","TextField","props","greeting","isMorning","isAfternoon","handleSubmit","e","userName","state","preventDefault","setState","formIsShowing","window","localStorage","setItem","JSON","stringify","handleChange","target","name","value","parse","getItem","this","classes","formDisplay","onSubmit","style","id","className","classNames","textField","label","margin","onChange","nameDisplay","IconButton","aria-label","onClick","Component","styles","FocusCheckbox","checked","focusName","handleClick","handleCheck","clearBtn","addBtn","checkboxFormTitle","FormControlLabel","checkboxForm","control","Checkbox","checkbox","helperText","showHelperText","defaultProps","marginRight","textDecoration","marginTop","marginBottom","animation","Focus","flexDirection","FocusWrapper","updateLocalStorage","focus","st","form","WEATHER_ICONS","thunderstorm","faBolt","drizzle","faCloudSunRain","faCloudMoonRain","rain","snow","faSnowflake","atmosphere","faSmog","clear","faSun","faMoon","clouds","faCloud","icon","text","paddingLeft","isEvening","city","country","showForm","temperature","Grid","container","direction","justify","item","toUpperCase","WeatherMetaForm","handleClose","hideForm","countryCode","alertIsShowing","bind","ValidatorForm","addValidationRule","length","locationExists","updateLocation","open","Dialog","onClose","DialogTitle","Divider","instantValidate","DialogContent","content","alert","fullWidth","validators","errorMessages","input","DialogActions","Button","type","variant","submitBtn","cancelBtn","paddingBottom","backgroundColor","borderRadius","transform","opaity","borderBottomColor","borderColor","loader","border","from","to","WEATHER_API_KEY","WEATHER_API_BASE","WeatherWidget","toCelcius","kelvin","Math","round","weatherLoading","getData","formShowing","a","async","fetch","res","status","location","json","data","main","temp","weather","addLocationBtn","PureComponent","Quote","author","quote","EMERGENCY_QUOTES","QuoteWidget","getRandomQuote","quotes","randomQuote","floor","random","uuid","favorite","addToFavorites","addQuote","removeFromFavorites","removeQuote","response","nextBtn","favoriteBorderBtn","favoriteFilledBtn","TransitionGroup","CSSTransition","key","timeout","NewToDoForm","add","listName","task","isDoneList","textInput","placeholder","background","MyButton","textTransform","withbackground","menu","menuItem","edit","remove","listNames","moveToList","React","useState","anchorEl","setAnchorEl","otherListNames","filter","aria-controls","aria-haspopup","event","currentTarget","faEllipsisH","Menu","keepMounted","Boolean","MenuItem","map","charAt","slice","ToDo","toggleForm","isEditing","handleToggle","toggle","handleUpdate","update","handleRemove","handleMove","displayMode","editMode","listItem","checkboxInput","checkmark","justifyContent","listStyleType","cursor","textShadow","zIndex","top","left","borderWidth","btn","ToDoList","toDoList","updateList","addToList","updateTask","updatedTask","updatedList","todo","removeTask","newListName","find","toggleChecked","todos","alignItems","newTask","button","number","currentList","changeList","toDoLists","menuItems","Object","keys","selected","ToDoWidget","toggleWindow","windowOpen","inbox","today","done","listLoading","oldListName","doneToDoList","uncheckedToDos","forEach","push","setTimeout","right","boxShadow","minHeight","backgroundSize","loadingScreen","weatherWrapper","clockWrapper","messageAndFocusWrapper","quoteWrapper","marginLeft","maxWidth","toDoWrapper","nav","morning","backgroundImage","morningImg","afternoon","afternoonImg","evening","eveningImg","DashboardView","setHour","Date","getHours","setMinute","getMinutes","componentLoading","_isMounted","setInterval","as","Link","Navigation","goBack","history","title","AppBar","Toolbar","Typography","SortableQuoteBox","userSelect","deleteIcon","openDialog","stopPropagation","SortableElement","colorBoxes","gridTemplateColumns","gridGap","scrollableContainer","overflowY","SortableContainer","favoriteQuotes","i","index","FavoriteQuotesView","openDeleteDialog","deletingId","closeDialog","handleDelete","onSortEnd","sortableQuoteList","axis","distance","message","heartBrokenIcon","faHeartBroken","FavoriteQuotes","aria-labelledby","List","ListItem","ListItemAvatar","Avatar","ListItemText","primary","flex","Page","children","App","syncLocalStorage","favoriteQuote","oldIndex","newIndex","arrayMove","savedQuotes","render","exact","path","routeProps","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7636cffb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/morning.e9572e42.jpg\";","module.exports = __webpack_public_path__ + \"static/media/afternoon.59fcbcec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/evening.57ba52fb.jpg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Clock = ({ hour, min }) => {\r\n  const addZero = n => (parseInt(n, 10) < 10 ? '0' : '') + n;\r\n  return (\r\n    <time>\r\n      {addZero(hour)}\r\n      <span>:</span>\r\n      {addZero(min)}\r\n    </time>\r\n  );\r\n};\r\n\r\nClock.propTypes = {\r\n  hour: PropTypes.number.isRequired,\r\n  min: PropTypes.number.isRequired,\r\n};\r\nexport default Clock;\r\n","export default {\r\n    up(){\r\n    },\r\n    down(size){\r\n        const sizes = {\r\n            xs: \"575.98px\",\r\n            xm: \"804.98px\",\r\n            md: \"991.98px\",\r\n            lg: \"1199.98px\"\r\n        };\r\n        return `@media (max-width: ${sizes[size]})`;\r\n    }\r\n}","import sizes from '../../styles/sizes';\r\n\r\nexport default {\r\n  Message: {\r\n    fontSize: '48px',\r\n    height: '70px',\r\n    padding: '0px 30px',\r\n    '&:hover svg': {\r\n      opacity: 0.7,\r\n      transition: 'opacity 0.3s ease-in',\r\n    },\r\n    [sizes.down('xm')]: {\r\n      fontSize: '38px',\r\n    },\r\n    [sizes.down('xs')]: {\r\n      padding: '0px 5px',\r\n    },\r\n  },\r\n  editBtn: {\r\n    position: 'absolute',\r\n    padding: '10px',\r\n    '& svg': {\r\n      fontSize: '38px',\r\n      opacity: 0,\r\n      [sizes.down('xm')]: {\r\n        fontSize: '28px',\r\n      },\r\n    },\r\n  },\r\n};\r\n","import TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport sizes from '../../styles/sizes';\r\n\r\nconst MyTextField = withStyles({\r\n  root: {\r\n    width: ({ big }) => (big ? 430 : 400),\r\n    bottom: ({ big }) => big && '21px',\r\n    [sizes.down('xm')]: {\r\n      width: ({ big }) => big && 335,\r\n    },\r\n    [sizes.down('xs')]: {\r\n      width: 335,\r\n    },\r\n    '& input': {\r\n      fontSize: ({ big }) => (big ? '48px' : '30px'),\r\n      textAlign: ({ big }) => (big ? 'left' : 'center'),\r\n      [sizes.down('xs')]: {\r\n        fontSize: ({ big }) => big && '25px',\r\n      },\r\n      [sizes.down('xm')]: {\r\n        fontSize: ({ big }) => big && '30px',\r\n      },\r\n    },\r\n    '& label': {\r\n      fontSize: ({ big }) => (big ? '48px' : '30px'),\r\n      [sizes.down('xs')]: {\r\n        fontSize: ({ big }) => big && '25px',\r\n      },\r\n      [sizes.down('xm')]: {\r\n        fontSize: ({ big }) => big && '38px',\r\n      },\r\n    },\r\n    '& input, label': {\r\n      color: 'white',\r\n      fontWeight: 500,\r\n    },\r\n    '& label:active': {\r\n      color: 'white',\r\n      fontSize: '25px',\r\n    },\r\n    '& label.MuiFormLabel-filled': {\r\n      display: 'none',\r\n    },\r\n\r\n    '& label.Mui-focused': {\r\n      color: 'white',\r\n      fontSize: '25px',\r\n    },\r\n    '& .MuiInput-underline:before': {\r\n      borderBottom: 'solid 3px white',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottom: 'solid 3px white',\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nexport default MyTextField;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport { IconButton } from '@material-ui/core';\r\nimport styles from './MessageStyles';\r\nimport MyTextField from '../MyTextField/MyTextField';\r\n\r\nclass Message extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const userName = JSON.parse(window.localStorage.getItem('userName'));\r\n    this.state = {\r\n      userName: userName || '',\r\n      formIsShowing: true,\r\n      greeting: this.greeting(),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { userName } = this.state;\r\n    if (userName) {\r\n      this.setState({\r\n        formIsShowing: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  greeting = () => {\r\n    const { isMorning, isAfternoon } = this.props;\r\n    if (isMorning) return 'Good Morning';\r\n    if (isAfternoon) return 'Good Afternoon';\r\n    return 'Good evening';\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { userName } = this.state;\r\n    e.preventDefault();\r\n    this.setState({ formIsShowing: false });\r\n    window.localStorage.setItem('userName', JSON.stringify(userName));\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { userName, formIsShowing, greeting } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    const formDisplay = (\r\n      <form onSubmit={this.handleSubmit} style={{ display: 'inline-block' }}>\r\n        <MyTextField\r\n          id=\"standard-basic\"\r\n          className={classNames(classes.textField)}\r\n          label=\"what is your name?\"\r\n          margin=\"normal\"\r\n          style={{ color: 'white' }}\r\n          value={userName}\r\n          name=\"userName\"\r\n          onChange={this.handleChange}\r\n          big=\"true\"\r\n        />\r\n      </form>\r\n    );\r\n    const nameDisplay = (\r\n      <span>\r\n        {userName}\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-label=\"Edit your name\"\r\n          onClick={() => this.setState({ formIsShowing: true })}\r\n          className={classNames(classes.editBtn)}\r\n        >\r\n          <CreateIcon />\r\n        </IconButton>\r\n      </span>\r\n    );\r\n    return (\r\n      <div className={classes.Message}>\r\n        <span>{greeting}, </span>\r\n        {formIsShowing ? formDisplay : nameDisplay}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMessage.propTypes = {\r\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\r\n  isMorning: PropTypes.bool.isRequired,\r\n  isAfternoon: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Message);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { IconButton } from '@material-ui/core';\r\nimport styles from './FocusCheckboxStyles';\r\n\r\nconst FocusCheckbox = ({ classes, checked, focusName, handleClick, handleCheck }) => {\r\n  const clearBtn = (\r\n    <IconButton color=\"inherit\" aria-label=\"Remove current focus\" onClick={handleClick}>\r\n      <ClearIcon />\r\n    </IconButton>\r\n  );\r\n  const addBtn = (\r\n    <IconButton color=\"inherit\" aria-label=\"Add new focus\" onClick={handleClick}>\r\n      <AddIcon />\r\n    </IconButton>\r\n  );\r\n  return (\r\n    <div className={classes.FocusCheckbox}>\r\n      <p className={classes.checkboxFormTitle}>TODAY</p>\r\n      <FormControlLabel\r\n        className={classes.checkboxForm}\r\n        control={\r\n          <Checkbox\r\n            className={classes.checkbox}\r\n            checked={checked}\r\n            onChange={handleCheck}\r\n            value={focusName}\r\n            color=\"default\"\r\n          />\r\n        }\r\n        label={focusName}\r\n      />\r\n      {checked ? addBtn : clearBtn}\r\n      <p\r\n        className={classNames(classes.helperText, {\r\n          [classes.showHelperText]: checked,\r\n        })}\r\n      >\r\n        Great work!\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nFocusCheckbox.propTypes = {\r\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\r\n  checked: PropTypes.bool.isRequired,\r\n  focusName: PropTypes.string,\r\n  handleClick: PropTypes.func.isRequired,\r\n  handleCheck: PropTypes.func.isRequired,\r\n};\r\n\r\nFocusCheckbox.defaultProps = {\r\n  focusName: '',\r\n};\r\nexport default withStyles(styles)(FocusCheckbox);\r\n","export default {\r\n    FocusCheckbox: {\r\n        \"& svg\": {\r\n            opacity: props => props.checked ? 1 : 0,\r\n            transition: \"opacity 0.3s ease-in\",\r\n        },\r\n        \"&:hover svg\": {\r\n            opacity: 1,\r\n        }\r\n    },\r\n    checkboxFormTitle: {\r\n        margin: 0\r\n    },\r\n    checkboxForm: {\r\n        marginRight: 0,\r\n\r\n        \"& .MuiFormControlLabel-label\": {\r\n            fontSize: \"25px\",\r\n            fontWeight: 400,\r\n            textDecoration: props => props.checked ? \"line-through\" : \"none\",\r\n        },\r\n    },\r\n    checkbox: {\r\n        \"& svg\": {\r\n            color: \"white\",\r\n            opacity: 1,\r\n            width: \"30px\",\r\n            height: \"30px\",\r\n\r\n        },\r\n    },\r\n    helperText: {\r\n        fontSize: \"18px\",\r\n        fontWeight: 400,\r\n        marginTop: \"5px\",\r\n        marginBottom: 0,\r\n        opacity: 0,\r\n    },\r\n    showHelperText: {\r\n        animation: \"$fade-in-out 3.5s\"\r\n    },\r\n    \"@keyframes fade-in-out\": {\r\n        \"20%\": {\r\n            opacity: 1,\r\n        },\r\n        \"80%\": {\r\n            opacity: 1,\r\n        },\r\n        \"100%\": {\r\n            opacity: 0,\r\n\r\n        }\r\n    }\r\n}","import sizes from '../../styles/sizes';\r\n\r\nexport default {\r\n  Focus: {\r\n    fontSize: '30px',\r\n    height: '111px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [sizes.down('xs')]: {\r\n      fontSize: '25px',\r\n    },\r\n  },\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MyTextField from '../MyTextField/MyTextField';\r\nimport FocusCheckbox from './FocusCheckbox/FocusCheckbox';\r\n\r\nimport styles from './FocusWrapperStyles';\r\n\r\nclass FocusWrapper extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      focusName: '',\r\n      formIsShowing: true,\r\n      checked: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const focus = JSON.parse(window.localStorage.getItem('focus'));\r\n    if (focus && focus.focusName) {\r\n      this.setState({\r\n        focusName: focus.focusName,\r\n        checked: focus.checked,\r\n        formIsShowing: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  updateLocalStorage = () => {\r\n    const { focusName, checked } = this.state;\r\n    const focus = {\r\n      focusName,\r\n      checked,\r\n    };\r\n    window.localStorage.setItem('focus', JSON.stringify(focus));\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { focusName } = this.state;\r\n    e.preventDefault();\r\n    if (focusName) {\r\n      this.setState({ formIsShowing: false }, () => this.updateLocalStorage());\r\n    }\r\n  };\r\n\r\n  handleCheck = () => {\r\n    this.setState(\r\n      st => ({ checked: !st.checked }),\r\n      () => this.updateLocalStorage(),\r\n    );\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState(\r\n      {\r\n        focusName: '',\r\n        formIsShowing: true,\r\n        checked: false,\r\n      },\r\n      () => this.updateLocalStorage(),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { focusName, formIsShowing, checked } = this.state;\r\n    const { classes } = this.props;\r\n    const form = (\r\n      <form onSubmit={this.handleSubmit} style={{ display: 'inline-block' }}>\r\n        <MyTextField\r\n          id=\"standard-basic\"\r\n          label=\"What is your focus for today?\"\r\n          margin=\"normal\"\r\n          value={focusName}\r\n          name=\"focusName\"\r\n          onChange={this.handleChange}\r\n        />\r\n      </form>\r\n    );\r\n    return (\r\n      <div className={classes.Focus}>\r\n        {formIsShowing ? (\r\n          form\r\n        ) : (\r\n          <FocusCheckbox\r\n            checked={checked}\r\n            focusName={focusName}\r\n            handleClick={this.handleClick}\r\n            handleCheck={this.handleCheck}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFocusWrapper.propTypes = {\r\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(FocusWrapper);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faSun,\r\n  faMoon,\r\n  faCloud,\r\n  faCloudSunRain,\r\n  faCloudMoonRain,\r\n  faBolt,\r\n  faSnowflake,\r\n  faSmog,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport { IconButton } from '@material-ui/core';\r\nimport classNames from 'classnames';\r\nimport styles from './WeatherStyles';\r\n\r\nconst WEATHER_ICONS = {\r\n  thunderstorm: [faBolt, faBolt],\r\n  drizzle: [faCloudSunRain, faCloudMoonRain],\r\n  rain: [faCloudSunRain, faCloudMoonRain],\r\n  snow: [faSnowflake, faSnowflake],\r\n  atmosphere: [faSmog, faSmog],\r\n  clear: [faSun, faMoon],\r\n  clouds: [faCloud, faCloud],\r\n};\r\n\r\nconst Weather = ({ classes, isEvening, city, country, showForm, temperature, id }) => {\r\n  const icon = () => {\r\n    if (id <= 232) return WEATHER_ICONS.thunderstorm;\r\n    if (id <= 321) return WEATHER_ICONS.drizzle;\r\n    if (id <= 531) return WEATHER_ICONS.rain;\r\n    if (id <= 622) return WEATHER_ICONS.snow;\r\n    if (id <= 781) return WEATHER_ICONS.atmosphere;\r\n    if (id === 800) return WEATHER_ICONS.clear;\r\n    return WEATHER_ICONS.clouds;\r\n  };\r\n\r\n  return (\r\n    <Grid container direction=\"column\" justify=\"center\">\r\n      <Grid item>\r\n        <h5 className={classes.text}>\r\n          {city.toUpperCase()} ({country.toUpperCase()})\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"Change city weather\"\r\n            onClick={showForm}\r\n            className={classNames(classes.editBtn)}\r\n          >\r\n            <CreateIcon />\r\n          </IconButton>\r\n        </h5>\r\n      </Grid>\r\n      <Grid item>\r\n        <FontAwesomeIcon className={classes.icon} icon={isEvening ? icon()[1] : icon()[0]} />\r\n      </Grid>\r\n      <Grid item>\r\n        <h1 className={classes.text}>{temperature}&deg;C</h1>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nWeather.propTypes = {\r\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\r\n  isEvening: PropTypes.bool.isRequired,\r\n  city: PropTypes.string.isRequired,\r\n  country: PropTypes.string.isRequired,\r\n  showForm: PropTypes.func.isRequired,\r\n  temperature: PropTypes.number.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Weather);\r\n","export default {\r\n  icon: {\r\n    fontSize: \"4em\",\r\n    margin: \"10px\"\r\n  },\r\n  text: {\r\n    margin: 0\r\n  },\r\n  editBtn: {\r\n    padding: 0,\r\n    paddingLeft: \"2px\",\r\n    \"& svg\": {\r\n      fontSize: \"16px\"\r\n    }\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport styles from './WeatherMetaFormStyles';\r\n\r\nclass WeatherMetaForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      city: '',\r\n      countryCode: '',\r\n      alertIsShowing: false,\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    ValidatorForm.addValidationRule('isLengthCorrect', value => value.length === 2);\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleClose = () => {\r\n    const { hideForm } = this.props;\r\n    hideForm();\r\n    this.setState({\r\n      city: '',\r\n      countryCode: '',\r\n      alertIsShowing: false,\r\n    });\r\n  };\r\n\r\n  async handleSubmit() {\r\n    const { city, countryCode } = this.state;\r\n    const { locationExists, updateLocation } = this.props;\r\n    if (await locationExists(city, countryCode)) {\r\n      updateLocation(city, countryCode);\r\n      this.handleClose();\r\n    } else {\r\n      this.setState({ alertIsShowing: true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { city, countryCode, alertIsShowing } = this.state;\r\n    const { classes, open } = this.props;\r\n    return (\r\n      <Dialog open={open} onClose={this.handleClose}>\r\n        <DialogTitle>Choose weather location</DialogTitle>\r\n        <Divider />\r\n        <ValidatorForm onSubmit={this.handleSubmit} instantValidate={false}>\r\n          <DialogContent className={classes.content}>\r\n            {alertIsShowing && (\r\n              <p className={classes.alert}>Sorry, could not find this location.</p>\r\n            )}\r\n            <TextValidator\r\n              label=\"City\"\r\n              value={city}\r\n              name=\"city\"\r\n              onChange={this.handleChange}\r\n              fullWidth\r\n              validators={['required']}\r\n              errorMessages={['Enter City Name']}\r\n              className={classes.input}\r\n            />\r\n            <TextValidator\r\n              label=\"Two-letter Country Code\"\r\n              value={countryCode}\r\n              name=\"countryCode\"\r\n              onChange={this.handleChange}\r\n              fullWidth\r\n              validators={['required', 'isLengthCorrect']}\r\n              errorMessages={['Enter Country Code', 'Country Code should be 2-letters long']}\r\n              className={classes.input}\r\n            />\r\n          </DialogContent>\r\n          <Divider />\r\n          <DialogActions>\r\n            <Button type=\"submit\" variant=\"contained\" className={classes.submitBtn}>\r\n              Add Location\r\n            </Button>\r\n            <Button onClick={this.handleClose} variant=\"contained\" className={classes.cancelBtn}>\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </ValidatorForm>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nWeatherMetaForm.propTypes = {\r\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\r\n  locationExists: PropTypes.func.isRequired,\r\n  updateLocation: PropTypes.func.isRequired,\r\n  hideForm: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(WeatherMetaForm);\r\n","export default {\r\n    content: {\r\n        paddingBottom: \"50px\"\r\n    },\r\n    alert: {\r\n        backgroundColor: \"rgba(255, 0, 0, 0.7)\",\r\n        padding: \"10px\",\r\n        borderRadius: \"10px\",\r\n        color: 'white',\r\n        animation: \"$fade-in 0.7s ease-out\",\r\n    },\r\n    \"@keyframes fade-in\": {\r\n        \"0%\": { opacity: 0, transform: \"translateY(-40px)\" },\r\n        \"30%\": { transform: \"translateY(20px)\" },\r\n        \"50%\": { transform: \"translateY(0)\" },\r\n        \"100%\": { opaity: 1 }\r\n    },\r\n    input: {\r\n        \"& label:active, label.Mui-focused\": {\r\n            color: \"#5CA19E\",\r\n        },\r\n        '& label.Mui-focused': {\r\n            color: '#5CA19E',\r\n        },\r\n        '& .MuiInput-underline:after:before': {\r\n            borderBottomColor: '#5CA19E',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: '#5CA19E',\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: '#5CA19E',\r\n            },\r\n        },\r\n    },\r\n    submitBtn: {\r\n        backgroundColor: \"rgb(45, 47, 56)\",\r\n        color: \"white\"\r\n    },\r\n    cancelBtn: {\r\n        backgroundColor: \"#5CA19E\",\r\n        color: \"white\"\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './LoadingSpinnerStyles';\r\n\r\nconst LoadingSpinner = ({ classes }) => <div className={classes.loader} />;\r\n\r\nLoadingSpinner.propTypes = {\r\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\r\n};\r\n\r\nLoadingSpinner.propTypes = {\r\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(LoadingSpinner);\r\n","export default {\r\n    loader: {\r\n        width: \"60px\",\r\n        height: \"60px\",\r\n        border: \"10px dotted rgba(255, 255, 255, 0.7)\",\r\n        borderRadius: \"50%\",\r\n        animation: \"$spin 2s linear infinite\",\r\n        margin: \"auto\"\r\n    },\r\n    \"@keyframes spin\": {\r\n        from: {\r\n            transform: \"rotate(0deg)\",\r\n        },\r\n        to: {\r\n            transform: \"rotate(360deg)\",\r\n        }\r\n    }\r\n}","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { IconButton } from '@material-ui/core';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport Weather from './Weather/Weather';\r\nimport WeatherMetaForm from './WeatherMetaForm/WeatherMetaForm';\r\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner';\r\n\r\nconst WEATHER_API_KEY = '3190d1d029a812e6a5365798e442ad0b';\r\nconst WEATHER_API_BASE = 'https://api.openweathermap.org/data/2.5/weather?q=';\r\n\r\nclass WeatherWidget extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      city: '',\r\n      country: '',\r\n      formShowing: false,\r\n      temperature: 0,\r\n      id: 0,\r\n      weatherLoading: false,\r\n    };\r\n    this.getData = this.getData.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const location = JSON.parse(window.localStorage.getItem('location'));\r\n    if (location) {\r\n      this.setState({ city: location.city, country: location.country }, () => this.getData());\r\n    }\r\n  }\r\n\r\n  async getData() {\r\n    const { city, country } = this.state;\r\n    if (city)\r\n      try {\r\n        const res = await fetch(`${WEATHER_API_BASE}${city},${country}&appid=${WEATHER_API_KEY}`);\r\n        const data = await res.json();\r\n        this.setState({\r\n          city,\r\n          country,\r\n          temperature: this.toCelcius(data.main.temp),\r\n          id: data.weather[0].id,\r\n          weatherLoading: false,\r\n        });\r\n      } catch (error) {\r\n        this.setState({ country: '', city: '' });\r\n      }\r\n  }\r\n\r\n  toCelcius = kelvin => Math.round(kelvin - 273.15);\r\n\r\n  updateLocation = (city, country) => {\r\n    this.setState({ city, country, weatherLoading: true }, () => this.getData());\r\n    window.localStorage.setItem('location', JSON.stringify({ city, country }));\r\n  };\r\n\r\n  showForm = () => {\r\n    this.setState({\r\n      formShowing: true,\r\n    });\r\n  };\r\n\r\n  hideForm = () => {\r\n    this.setState({\r\n      formShowing: false,\r\n    });\r\n  };\r\n\r\n  locationExists = async (city, country) => {\r\n    const res = await fetch(`${WEATHER_API_BASE}${city},${country}&appid=${WEATHER_API_KEY}`);\r\n    return res.status !== 404;\r\n  };\r\n\r\n  render() {\r\n    const { country, city, formShowing, temperature, id, weatherLoading } = this.state;\r\n    const { isEvening } = this.props;\r\n    const weather = (\r\n      <Weather\r\n        isEvening={isEvening}\r\n        country={country}\r\n        city={city}\r\n        showForm={this.showForm}\r\n        temperature={temperature}\r\n        id={id}\r\n      />\r\n    );\r\n    const addLocationBtn = (\r\n      <div>\r\n        <h5>WEATHER</h5>\r\n        <IconButton color=\"inherit\" aria-label=\"Edit weather location\" onClick={this.showForm}>\r\n          <AddCircleOutlineIcon fontSize=\"large\" />\r\n        </IconButton>\r\n      </div>\r\n    );\r\n    return (\r\n      <>\r\n        {country && city && !weatherLoading && weather}\r\n        {country && city && weatherLoading && <LoadingSpinner />}\r\n        {(!country || !city) && addLocationBtn}\r\n        <WeatherMetaForm\r\n          updateLocation={this.updateLocation}\r\n          hideForm={this.hideForm}\r\n          open={formShowing}\r\n          locationExists={this.locationExists}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nWeatherWidget.propTypes = {\r\n  isEvening: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default WeatherWidget;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './QuoteStyles';\r\n\r\nconst Quote = ({ author, text, classes }) => (\r\n  <blockquote className={classes.quote}>\r\n    <p>&quot;{text}&quot;</p>\r\n    {author && <footer>- {author}</footer>}\r\n  </blockquote>\r\n);\r\n\r\nQuote.propTypes = {\r\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\r\n  author: PropTypes.string,\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nQuote.defaultProps = {\r\n  author: '',\r\n};\r\n\r\nexport default withStyles(styles)(Quote);\r\n","export default {\r\n    quote: {\r\n        margin: 0,\r\n        \"& p\": {\r\n            marginTop: 0,\r\n            marginBottom: \"3px\",\r\n        },\r\n        \"& footer\": {\r\n            fontWeight: 400,\r\n            fontSize: \"14px\"\r\n        },\r\n    },\r\n}","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport uuid from 'uuid/v4';\r\nimport styles from './QuoteWidgetStyles';\r\nimport Quote from '../Quote/Quote';\r\n\r\nconst QUOTES_API = 'https://type.fit/api/quotes';\r\nconst EMERGENCY_QUOTES = [\r\n  {\r\n    text: 'Your mind will answer most questions if you learn to relax and wait for the answer.',\r\n    author: 'William Burroughs',\r\n    id: '8c242df4-e701-4d01-9d77-e0fd2590f9e4',\r\n  },\r\n  {\r\n    text: 'The shortest answer is doing.',\r\n    author: 'Lord Herbert',\r\n    id: 'b17a51eb-4bac-4448-a6ea-56fd663d8baf',\r\n  },\r\n  {\r\n    text: 'Nobody can do everything, but everybody can do something.',\r\n    author: null,\r\n    id: 'f6240458-d757-4bc0-946f-358a0b2b2baa',\r\n  },\r\n  {\r\n    text: \"Never regret. If it's good, it's wonderful. If it's bad, it's experience.\",\r\n    author: 'Victoria Holt',\r\n    id: '6e4a308e-9e9f-4e2f-b4f9-3d10d3fbf18d',\r\n  },\r\n  {\r\n    text:\r\n      'To effectively communicate, we must realize that we are all different in the way we perceive the world and use this understanding as a guide to our communication with others.',\r\n    author: 'Anthony Robbins',\r\n    id: '155012c3-553e-4e27-a35e-eaf677b00e6b',\r\n  },\r\n  {\r\n    text:\r\n      'Criticism is something you can easily avoid by saying nothing, doing nothing, and being nothing.',\r\n    author: 'Aristotle',\r\n    id: 'ff6abcd4-5b96-4b3f-99dd-1ebbec492977',\r\n  },\r\n];\r\n\r\nclass QuoteWidget extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      quotes: [],\r\n      author: '',\r\n      text: '',\r\n      id: '',\r\n      favorite: false,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const response = await fetch(QUOTES_API);\r\n      const quotes = await response.json();\r\n      this.setState({ quotes }, this.getRandomQuote);\r\n    } catch (error) {\r\n      this.setState({ quotes: EMERGENCY_QUOTES }, this.getRandomQuote);\r\n    }\r\n  }\r\n\r\n  getRandomQuote = () => {\r\n    const { quotes } = this.state;\r\n    const randomNum = Math.floor(Math.random() * quotes.length);\r\n    const randomQuote = quotes[randomNum];\r\n    this.setState({ ...randomQuote, id: uuid(), favorite: false });\r\n  };\r\n\r\n  addToFavorites = () => {\r\n    const { text, author, id } = this.state;\r\n    const { addQuote } = this.props;\r\n    this.setState({ favorite: true });\r\n    addQuote({ text, author, id });\r\n  };\r\n\r\n  removeFromFavorites = () => {\r\n    const { removeQuote } = this.props;\r\n    const { id } = this.state;\r\n    this.setState({ favorite: false });\r\n    removeQuote(id);\r\n  };\r\n\r\n  render() {\r\n    const { author, text, id, favorite } = this.state;\r\n    const { classes } = this.props;\r\n    const nextBtn = (\r\n      <IconButton\r\n        color=\"inherit\"\r\n        aria-label=\"Add city weather\"\r\n        onClick={this.getRandomQuote}\r\n        className={classes.icon}\r\n      >\r\n        <KeyboardArrowDownIcon fontSize=\"large\" />\r\n      </IconButton>\r\n    );\r\n    const favoriteBorderBtn = (\r\n      <IconButton\r\n        color=\"inherit\"\r\n        aria-label=\"Add quotes to favorites\"\r\n        onClick={this.addToFavorites}\r\n        className={classes.icon}\r\n      >\r\n        <FavoriteBorderIcon />\r\n      </IconButton>\r\n    );\r\n    const favoriteFilledBtn = (\r\n      <IconButton\r\n        color=\"inherit\"\r\n        aria-label=\"Remove quote from favorites\"\r\n        onClick={this.removeFromFavorites}\r\n        className={classes.icon}\r\n      >\r\n        <FavoriteIcon />\r\n      </IconButton>\r\n    );\r\n    return (\r\n      <section className={classes.QuoteWidget}>\r\n        <TransitionGroup>\r\n          {text && (\r\n            <CSSTransition key={id} timeout={300} classNames=\"fade\">\r\n              <Quote author={author} text={text} />\r\n            </CSSTransition>\r\n          )}\r\n        </TransitionGroup>\r\n        {nextBtn}\r\n        {favorite ? favoriteFilledBtn : favoriteBorderBtn}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nQuoteWidget.propTypes = {\r\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\r\n  addQuote: PropTypes.func.isRequired,\r\n  removeQuote: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(QuoteWidget);\r\n","export default {\r\n    QuoteWidget: {\r\n        transform: \"translateY(35px)\",\r\n        transition: \"transform 0.4s ease-in\",\r\n        \"&:hover\": {\r\n            transform: \"translateY(0)\",\r\n\r\n        },\r\n        \"& button\": {\r\n            opacity: 0,\r\n            transform: \"translateY(-10px)\",\r\n            transition: \"all 0.4s ease-in\"\r\n        },\r\n        \"&:hover button\": {\r\n            transform: \"translateY(0)\",\r\n            opacity: 0.9,\r\n        },\r\n        \"&:hover button:hover\": {\r\n            opacity: 1\r\n        },\r\n    },\r\n    icon: {\r\n        padding: 0, \r\n        margin: 0\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport uuid from 'uuid/v4';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './NewToDoFormStyles';\r\n\r\nclass NewToDoForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { task: '' };\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { add, listName } = this.props;\r\n    const { task } = this.state;\r\n    e.preventDefault();\r\n    if (task) {\r\n      const isDoneList = listName === 'done';\r\n      const newTask = { ...this.state, id: uuid(), checked: isDoneList };\r\n      add(newTask);\r\n      this.setState({ task: '' });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { task } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <input\r\n          className={classes.textInput}\r\n          id=\"task\"\r\n          name=\"task\"\r\n          type=\"text\"\r\n          value={task}\r\n          onChange={this.handleChange}\r\n          placeholder=\"New to-do\"\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nNewToDoForm.propTypes = {\r\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\r\n  listName: PropTypes.string.isRequired,\r\n  add: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(NewToDoForm);\r\n","export default {\r\n    textInput: {\r\n        background: \"none\",\r\n        border: \"none\",\r\n        color: \"white\",\r\n        fontSize: \"16px\",\r\n        padding: 0,\r\n    },\r\n}","import { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst MyButton = withStyles({\r\n  root: {\r\n    color: 'white',\r\n    textTransform: 'uppercase',\r\n    backgroundColor: ({ withbackground }) => withbackground && 'rgba(0,0,0,0.2)',\r\n    '&:hover': {\r\n      color: 'aquamarine',\r\n      transition: 'color 0.3s ease-in',\r\n    },\r\n  },\r\n})(Button);\r\n\r\nexport default MyButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEllipsisH } from '@fortawesome/free-solid-svg-icons';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './ToDoMenuStyles';\r\n\r\nimport MyButton from '../../../../MyButton/MyButton';\r\n\r\nconst ToDoMenu = ({ edit, remove, listName, listNames, moveToList, classes }) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  // 1. the piece of state\r\n  // 2. function to update that piece of state\r\n  const otherListNames = listNames.filter(name => name !== listName);\r\n\r\n  const handleOpen = event => {\r\n    setAnchorEl(event.currentTarget);\r\n    // The currentTarget property always refers to the element whose event listener triggered the event, opposed to the target property, which returns the element that triggered the event.\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MyButton aria-controls=\"todo-list-menu\" aria-haspopup=\"true\" onClick={handleOpen}>\r\n        <FontAwesomeIcon icon={faEllipsisH} />\r\n      </MyButton>\r\n      <Menu\r\n        className={classes.menu}\r\n        id=\"todo-list-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem className={classes.menuItem} onClick={edit}>\r\n          Edit\r\n        </MenuItem>\r\n        <hr />\r\n        {otherListNames.map(name => (\r\n          <MenuItem className={classes.menuItem} onClick={() => moveToList(name)} key={name}>\r\n            Move to {name.charAt(0).toUpperCase() + name.slice(1)}\r\n          </MenuItem>\r\n        ))}\r\n        <hr />\r\n        <MenuItem className={classes.menuItem} onClick={remove}>\r\n          Delete\r\n        </MenuItem>\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n\r\nToDoMenu.propTypes = {\r\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\r\n  listName: PropTypes.oneOf(['inbox', 'today', 'done']).isRequired,\r\n  listNames: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  moveToList: PropTypes.func.isRequired,\r\n  remove: PropTypes.func.isRequired,\r\n  edit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ToDoMenu);\r\n","export default {\r\n  menu: {\r\n    \"& div.MuiPopover-paper\": {\r\n      backgroundColor: \"#2E2E2E\",\r\n      color: \"white\",\r\n      fontSize: \"10px\"\r\n    }\r\n  },\r\n  menuItem: {\r\n    padding: \"0px 10px\",\r\n    \"&:hover\": {\r\n      color: \"aquamarine\",\r\n      transition: \"color 0.3s ease-in\"\r\n    }\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ToDoMenu from './ToDoMenu/ToDoMenu';\r\nimport styles from './ToDoStyles';\r\n\r\nclass ToDo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { task } = this.props;\r\n    this.state = {\r\n      isEditing: false,\r\n      task,\r\n    };\r\n  }\r\n\r\n  toggleForm = () => {\r\n    this.setState(st => ({ isEditing: !st.isEditing }));\r\n  };\r\n\r\n  handleToggle = () => {\r\n    const { toggle, id } = this.props;\r\n    toggle(id);\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleUpdate = e => {\r\n    const { update, id } = this.props;\r\n    const { task } = this.state;\r\n\r\n    e.preventDefault();\r\n    this.toggleForm();\r\n    update(task, id);\r\n  };\r\n\r\n  handleRemove = () => {\r\n    const { remove, id } = this.props;\r\n    remove(id);\r\n  };\r\n\r\n  handleMove = listName => {\r\n    const { moveToList, id } = this.props;\r\n    moveToList(listName, id);\r\n  };\r\n\r\n  render() {\r\n    const { isEditing, task } = this.state;\r\n    const { checked, listName, listNames, classes } = this.props;\r\n    const displayMode = <span className={classNames(classes.task)}>{task}</span>;\r\n    const editMode = (\r\n      <form onSubmit={this.handleUpdate}>\r\n        <input\r\n          className={classNames(classes.textInput)}\r\n          type=\"text\"\r\n          name=\"task\"\r\n          value={task}\r\n          onChange={this.handleChange}\r\n        />\r\n      </form>\r\n    );\r\n    return (\r\n      <div className={classes.ToDo}>\r\n        <li className={classes.listItem}>\r\n          <input\r\n            className={classes.checkboxInput}\r\n            type=\"checkbox\"\r\n            checked={checked}\r\n            onChange={this.handleToggle}\r\n          />\r\n          <span className={classes.checkmark}>\r\n            <span className={classes.checked} />\r\n          </span>\r\n          {isEditing ? editMode : displayMode}\r\n        </li>\r\n        {!isEditing && (\r\n          <div>\r\n            <ToDoMenu\r\n              edit={this.toggleForm}\r\n              remove={this.handleRemove}\r\n              listName={listName}\r\n              listNames={listNames}\r\n              moveToList={this.handleMove}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nToDo.propTypes = {\r\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\r\n  listName: PropTypes.oneOf(['inbox', 'today', 'done']).isRequired,\r\n  listNames: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  moveToList: PropTypes.func.isRequired,\r\n  remove: PropTypes.func.isRequired,\r\n  toggle: PropTypes.func.isRequired,\r\n  update: PropTypes.func.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  task: PropTypes.string.isRequired,\r\n  checked: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ToDo);\r\n","export default {\r\n    ToDo: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    listItem: {\r\n        listStyleType: \"none\",\r\n        display: \"flex\",\r\n        position: \"relative\",\r\n        marginBottom: \"12px\",\r\n        cursor: \"default\",\r\n    },\r\n    task: {\r\n        textDecoration: props => props.checked ? \"line-through\" : \"none\",\r\n        color: props => props.checked ? \"gray\" : \"white\",\r\n        transition: \"color 0.3s ease-in\",\r\n        fontSize: \"16px\",\r\n        textShadow: \"none\",\r\n        paddingLeft: \"25px\",\r\n    },\r\n    textInput: {\r\n        background: \"none\",\r\n        border: \"none\",\r\n        color: \"white\",\r\n        fontSize: \"16px\",\r\n        padding: 0,\r\n        paddingLeft: \"25px\",\r\n    },\r\n    checkboxInput: {\r\n        position: \"absolute\",\r\n        opacity: 0,\r\n        cursor: \"pointer\",\r\n        height: \"16px\",\r\n        width: \"16px\",\r\n        zIndex: 100,\r\n        margin: 0\r\n    },\r\n    checkmark: {\r\n        position: \"absolute\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n        height: \"16px\",\r\n        width: \"16px\",\r\n        backgroundColor: props => props.checked ? \"#5CA19E\" : \"#eee\",\r\n        transition: \"background-color 0.3s ease-in 0.1s\",\r\n        borderRadius: \"2px\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#C6DEDE\"\r\n        },\r\n    },\r\n    checked: {\r\n        content: \"\",\r\n        position: \"absolute\",\r\n        opacity: props => props.checked ? 1 : 0,\r\n        transition: \"opacity 0.1s ease-in\",\r\n        left: \"5px\",\r\n        top: \"2px\",\r\n        width: \"3px\",\r\n        height: \"8px\",\r\n        border: \"solid white\",\r\n        borderWidth: \"0 3px 3px 0\",\r\n        transform: \"rotate(45deg)\",\r\n    },\r\n    btn: {\r\n        color: \"white\",\r\n        \"&:hover\": {\r\n            color: \"aquamarine\",\r\n            transition: \"color 0.3s ease-in\"\r\n        }\r\n    }\r\n\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport NewToDoForm from './NewToDoForm/NewToDoForm';\r\nimport ToDo from './ToDo/ToDo';\r\n\r\nconst ToDoList = ({ toDoList, listName, listNames, updateList, addToList }) => {\r\n  const addToDo = newTask => {\r\n    const updatedList = [...toDoList, newTask];\r\n    updateList(listName, updatedList);\r\n  };\r\n  const updateTask = (updatedTask, id) => {\r\n    const updatedList = toDoList.map(todo => {\r\n      if (todo.id === id) {\r\n        return { ...todo, task: updatedTask };\r\n      }\r\n      return todo;\r\n    });\r\n    updateList(listName, updatedList);\r\n  };\r\n  const removeTask = id => {\r\n    const updatedList = toDoList.filter(task => task.id !== id);\r\n    updateList(listName, updatedList);\r\n  };\r\n\r\n  const moveToList = (newListName, id) => {\r\n    let todo = toDoList.find(item => item.id === id);\r\n    if (newListName === 'done' || listName === 'done') {\r\n      todo = { ...todo, checked: !todo.checked };\r\n    }\r\n    addToList(newListName, todo);\r\n    removeTask(id);\r\n  };\r\n\r\n  const toggleChecked = id => {\r\n    if (listName === 'inbox' || listName === 'today') {\r\n      const updatedList = toDoList.map(todo => {\r\n        if (todo.id === id) {\r\n          return { ...todo, checked: !todo.checked };\r\n        }\r\n        return todo;\r\n      });\r\n      updateList(listName, updatedList);\r\n    } else if (listName === 'done') {\r\n      moveToList('inbox', id);\r\n    }\r\n  };\r\n\r\n  const todos = toDoList.map(todo => (\r\n    <CSSTransition key={todo.id} timeout={300} classNames=\"fade\">\r\n      <ToDo\r\n        key={todo.id}\r\n        id={todo.id}\r\n        task={todo.task}\r\n        checked={todo.checked}\r\n        update={updateTask}\r\n        toggle={toggleChecked}\r\n        remove={removeTask}\r\n        listName={listName}\r\n        listNames={listNames}\r\n        moveToList={moveToList}\r\n      />\r\n    </CSSTransition>\r\n  ));\r\n  return (\r\n    <div className=\"ToDoList\">\r\n      {todos.length > 0 ? (\r\n        <ul className=\"ToDoList-list\" style={{ paddingLeft: 0 }}>\r\n          <TransitionGroup>{todos}</TransitionGroup>\r\n        </ul>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            height: '100px',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          Add a to-do to get started.\r\n        </div>\r\n      )}\r\n      <NewToDoForm add={addToDo} listName={listName} />\r\n    </div>\r\n  );\r\n};\r\n\r\nToDoList.propTypes = {\r\n  listName: PropTypes.oneOf(['inbox', 'today', 'done']).isRequired,\r\n  listNames: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  toDoList: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      task: PropTypes.string.isRequired,\r\n      checked: PropTypes.bool.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  updateList: PropTypes.func.isRequired,\r\n  addToList: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ToDoList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './ToDoListMenuStyles';\r\n\r\nconst ToDoListMenu = ({ currentList, changeList, toDoLists, classes }) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  // 1. the piece of state\r\n  // 2. function to update that piece of state\r\n\r\n  const handleOpen = event => {\r\n    setAnchorEl(event.currentTarget);\r\n    // The currentTarget property always refers to the element whose event listener triggered the event, opposed to the target property, which returns the element that triggered the event.\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClick = name => {\r\n    changeList(name, currentList);\r\n    handleClose();\r\n  };\r\n  const menuItems = Object.keys(toDoLists).map(name => (\r\n    <MenuItem\r\n      onClick={() => handleClick(name)}\r\n      key={name}\r\n      className={classes.menuItem}\r\n      selected={name === currentList}\r\n    >\r\n      <span>{name.charAt(0).toUpperCase() + name.slice(1)}</span>\r\n      <span className={classes.number}>{toDoLists[name].length}</span>\r\n    </MenuItem>\r\n  ));\r\n  return (\r\n    <>\r\n      <Button\r\n        className={classes.button}\r\n        aria-controls=\"todo-list-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleOpen}\r\n      >\r\n        {currentList}\r\n        <KeyboardArrowDownIcon />\r\n      </Button>\r\n      <Menu\r\n        className={classes.menu}\r\n        id=\"todo-list-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        {menuItems}\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n\r\nToDoListMenu.propTypes = {\r\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\r\n  currentList: PropTypes.oneOf(['inbox', 'today', 'done']).isRequired,\r\n  toDoLists: PropTypes.shape({\r\n    inbox: PropTypes.arrayOf(PropTypes.object),\r\n    today: PropTypes.arrayOf(PropTypes.object),\r\n    done: PropTypes.arrayOf(PropTypes.object),\r\n  }).isRequired,\r\n  changeList: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ToDoListMenu);\r\n","export default {\r\n    button: {\r\n        padding: 0,\r\n        color: \"white\",\r\n        fontSize: \"16px\",\r\n        \"&:hover\": {\r\n            color: \"aquamarine\",\r\n            transition: \"color 0.3s ease-in\"\r\n        }\r\n    },\r\n    menu: {\r\n        \"& div.MuiPopover-paper\": {\r\n            backgroundColor: \"#2E2E2E\",\r\n            color: \"white\",\r\n            width: \"200px\"\r\n        },\r\n        \"& .Mui-selected\":{\r\n            color: \"aquamarine\",\r\n            background: \"rgba(0,0,0,0.3)\"\r\n        }\r\n    },\r\n    menuItem: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        \"&:hover\": {\r\n            color: \"aquamarine\",\r\n            transition: \"color 0.3s ease-in\"\r\n        },\r\n        \r\n    },\r\n    number: {\r\n        color: \"gray\"\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ToDoList from './ToDoList/ToDoList';\r\nimport ToDoListMenu from './ToDoListMenu/ToDoListMenu';\r\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner';\r\nimport MyButton from '../MyButton/MyButton';\r\nimport styles from './ToDoWidgetStyles';\r\n\r\nclass ToDoWidget extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      windowOpen: false,\r\n      currentList: 'today',\r\n      toDoLists: JSON.parse(window.localStorage.getItem('toDoLists')) || {\r\n        inbox: [],\r\n        today: [],\r\n        done: [],\r\n      },\r\n      listLoading: false,\r\n    };\r\n    this.updateList = this.updateList.bind(this);\r\n    this.changeList = this.changeList.bind(this);\r\n    this.addToList = this.addToList.bind(this);\r\n  }\r\n\r\n  toggleWindow = () => this.setState(st => ({ windowOpen: !st.windowOpen }));\r\n\r\n  changeList(newListName, oldListName) {\r\n    this.setState({ listLoading: true });\r\n    if (oldListName === 'inbox' || oldListName === 'today') {\r\n      const { toDoLists } = this.state;\r\n      const doneToDoList = toDoLists.done;\r\n      const uncheckedToDos = [];\r\n      toDoLists[oldListName].forEach(todo => {\r\n        if (todo.checked === false) {\r\n          uncheckedToDos.push(todo);\r\n        } else {\r\n          doneToDoList.push(todo);\r\n        }\r\n      });\r\n      this.updateList('done', doneToDoList);\r\n      this.updateList(oldListName, uncheckedToDos);\r\n    }\r\n    setTimeout(() => {\r\n      this.setState({ currentList: newListName, listLoading: false });\r\n    }, 400);\r\n  }\r\n\r\n  updateList(listName, updatedList) {\r\n    this.setState(\r\n      st => ({ toDoLists: { ...st.toDoLists, [listName]: updatedList } }),\r\n      () => {\r\n        const { toDoLists } = this.state;\r\n        window.localStorage.setItem('toDoLists', JSON.stringify(toDoLists));\r\n      },\r\n    );\r\n  }\r\n\r\n  addToList(listName, todo) {\r\n    const { toDoLists } = this.state;\r\n    this.updateList(listName, [...toDoLists[listName], todo]);\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { windowOpen, currentList, toDoLists, listLoading } = this.state;\r\n    return (\r\n      <>\r\n        <TransitionGroup>\r\n          {windowOpen && (\r\n            <CSSTransition key={windowOpen} timeout={300} classNames=\"fade\">\r\n              <div className={classes.window}>\r\n                <ToDoListMenu\r\n                  currentList={currentList}\r\n                  changeList={this.changeList}\r\n                  toDoLists={toDoLists}\r\n                />\r\n                {listLoading ? (\r\n                  <LoadingSpinner />\r\n                ) : (\r\n                  <ToDoList\r\n                    toDoList={toDoLists[currentList]}\r\n                    listName={currentList}\r\n                    updateList={this.updateList}\r\n                    addToList={this.addToList}\r\n                    listNames={Object.keys(toDoLists)}\r\n                  />\r\n                )}\r\n              </div>\r\n            </CSSTransition>\r\n          )}\r\n        </TransitionGroup>\r\n        <MyButton withbackground=\"true\" onClick={this.toggleWindow}>\r\n          ToDo\r\n        </MyButton>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nToDoWidget.propTypes = {\r\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ToDoWidget);\r\n","export default {\r\n    button: {\r\n        position: \"relative\",\r\n        color: \"white\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"rgba(0,0,0,0.3)\",\r\n        }\r\n    },\r\n    window: {\r\n        position: \"absolute\",\r\n        bottom: \"40px\",\r\n        right: \"0px\",\r\n        backgroundColor: \"#1D2636\",\r\n        boxShadow: \"0 0 10px rgba(0, 0, 0, 0.568)\",\r\n        borderRadius: \"10px\",\r\n        width: \"320px\",\r\n        padding: \"20px\",\r\n        textAlign: \"left\",\r\n        minHeight: \"111.2px\"\r\n    },\r\n}","import morningImg from '../../assets/images/morning.jpg';\r\nimport afternoonImg from '../../assets/images/afternoon.jpg';\r\nimport eveningImg from '../../assets/images/evening.jpg';\r\nimport sizes from '../../styles/sizes';\r\n\r\nexport default {\r\n  root: {\r\n    backgroundColor: '#1D2636',\r\n    backgroundSize: 'cover',\r\n    height: '100vh',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    textShadow: '0 0 10px rgba(0, 0, 0, 0.568)',\r\n    color: 'white',\r\n  },\r\n  loadingScreen: {\r\n    position: 'fixed',\r\n    zIndex: 100,\r\n    height: '100%',\r\n    width: '100%',\r\n    top: 0,\r\n    left: 0,\r\n    backgroundColor: '#1D2636',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  weatherWrapper: {\r\n    position: 'fixed',\r\n    top: '30px',\r\n    right: '20px',\r\n    width: '125px',\r\n    height: '150px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n    '& h5': {\r\n      margin: 0,\r\n    },\r\n    [sizes.down('xs')]: {\r\n      right: '5px',\r\n    },\r\n  },\r\n  clockWrapper: {\r\n    fontSize: '10rem',\r\n    fontWeight: 400,\r\n    [sizes.down('xm')]: {\r\n      fontSize: '8rem',\r\n    },\r\n  },\r\n  messageAndFocusWrapper: {\r\n    color: 'white',\r\n    fontWeight: 500,\r\n    '& .MuiFormControl-root': {\r\n      margin: 0,\r\n    },\r\n  },\r\n  quoteWrapper: {\r\n    bottom: '10px',\r\n    position: 'fixed',\r\n    left: 'calc(-50vw + 50%)',\r\n    right: 'calc(-50vw + 50%)',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    maxWidth: '600px',\r\n    padding: '10px 80px',\r\n  },\r\n  toDoWrapper: {\r\n    bottom: '30px',\r\n    right: '30px',\r\n    position: 'fixed',\r\n    [sizes.down('xs')]: {\r\n      right: '5px',\r\n    },\r\n  },\r\n  nav: {\r\n    position: 'fixed',\r\n    top: '20px',\r\n    left: '30px',\r\n    [sizes.down('xs')]: {\r\n      left: '5px',\r\n    },\r\n  },\r\n  morning: {\r\n    backgroundImage: `url(${morningImg})`,\r\n  },\r\n  afternoon: {\r\n    backgroundImage: `url(${afternoonImg})`,\r\n  },\r\n  evening: {\r\n    backgroundImage: `url(${eveningImg})`,\r\n  },\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Clock from '../../components/Clock/Clock';\r\nimport Message from '../../components/Message/Message';\r\nimport FocusWrapper from '../../components/FocusWrapper/FocusWrapper';\r\nimport WeatherWidget from '../../components/WeatherWidget/WeatherWidget';\r\nimport LoadingSpinner from '../../components/LoadingSpinner/LoadingSpinner';\r\nimport QuoteWidget from '../../components/QuoteWidget/QuoteWidget';\r\nimport ToDoWidget from '../../components/ToDoWidget/ToDoWidget';\r\nimport MyButton from '../../components/MyButton/MyButton';\r\nimport styles from './DashboardViewStyles';\r\n\r\nclass DashboardView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hour: this.setHour(),\r\n      min: this.setMinute(),\r\n      isMorning: this.setHour() >= 6 && this.setHour() < 12,\r\n      isAfternoon: this.setHour() >= 12 && this.setHour() < 18,\r\n      isEvening: this.setHour() >= 18 || this.setHour() < 6,\r\n      componentLoading: true,\r\n    };\r\n    this._isMounted = false;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    setTimeout(() => this.setState({ componentLoading: false }), 900);\r\n    setInterval(() => {\r\n      // prevent this.setState() on an unmounted component\r\n      if (this._isMounted) {\r\n        this.setState({\r\n          hour: this.setHour(),\r\n          min: this.setMinute(),\r\n          isMorning: this.setHour() >= 6 && this.setHour() < 12,\r\n          isAfternoon: this.setHour() >= 12 && this.setHour() < 18,\r\n          isEvening: this.setHour() >= 18 || this.setHour() < 6,\r\n        });\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  setHour = () => new Date().getHours();\r\n\r\n  setMinute = () => new Date().getMinutes();\r\n\r\n  render() {\r\n    const { hour, min, isMorning, isAfternoon, isEvening, componentLoading } = this.state;\r\n    const { classes, addQuote, removeQuote } = this.props;\r\n    return (\r\n      <div\r\n        className={classNames(classes.root, {\r\n          [classes.morning]: isMorning,\r\n          [classes.afternoon]: isAfternoon,\r\n          [classes.evening]: isEvening,\r\n        })}\r\n      >\r\n        <nav className={classes.nav}>\r\n          <Link to=\"/favorite-quotes\">\r\n            <MyButton as={Link} to=\"/favorite-quotes\" withbackground=\"true\">\r\n              <FavoriteIcon fontSize=\"small\" /> Quotes\r\n            </MyButton>\r\n          </Link>\r\n        </nav>\r\n        {componentLoading && (\r\n          <div className={classes.loadingScreen}>\r\n            <LoadingSpinner />\r\n          </div>\r\n        )}\r\n        <section className={classes.weatherWrapper}>\r\n          <WeatherWidget isEvening={isEvening} />\r\n        </section>\r\n        <section className={classes.clockWrapper}>\r\n          <Clock hour={hour} min={min} />\r\n        </section>\r\n        <section className={classes.messageAndFocusWrapper}>\r\n          <Message isMorning={isMorning} isAfternoon={isAfternoon} />\r\n          <FocusWrapper />\r\n        </section>\r\n        <section className={classes.quoteWrapper}>\r\n          <QuoteWidget addQuote={addQuote} removeQuote={removeQuote} />\r\n        </section>\r\n        <section className={classes.toDoWrapper}>\r\n          <ToDoWidget />\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboardView.propTypes = {\r\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\r\n  addQuote: PropTypes.func.isRequired,\r\n  removeQuote: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DashboardView);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport styles from './NavigationStyles';\r\n\r\nimport MyButton from '../MyButton/MyButton';\r\n\r\nclass Navigation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.goBack = this.goBack.bind(this);\r\n  }\r\n\r\n  goBack = () => {\r\n    const { history } = this.props;\r\n    history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { title, classes } = this.props;\r\n    return (\r\n      <AppBar position=\"static\" className={classes.AppBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            {title}\r\n          </Typography>\r\n          <MyButton onClick={this.goBack}>\r\n            Go Back\r\n            <ExitToAppIcon />\r\n          </MyButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nNavigation.propTypes = {\r\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  history: PropTypes.shape({\r\n    push: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Navigation);\r\n","export default {\r\n  AppBar: {\r\n    backgroundColor: \"black\"\r\n  },\r\n  title: {\r\n    marginRight: \"auto\"\r\n  }\r\n};\r\n","import sizes from '../../../styles/sizes';\r\n\r\nexport default {\r\n  SortableQuoteBox: {\r\n    backgroundColor: 'rgb(46, 46, 46)',\r\n    boxShadow: '0 0 5px rgba(0,0,0,0.7)',\r\n    height: '150px',\r\n    padding: '20px',\r\n    color: 'white',\r\n    position: 'relative',\r\n    textAlign: 'left',\r\n    cursor: 'pointer',\r\n    fontSize: '1.2em',\r\n    userSelect: 'none',\r\n    [sizes.down('md')]: {\r\n      height: '190px',\r\n    },\r\n    [sizes.down('xm')]: {\r\n      height: '110px',\r\n    },\r\n    [sizes.down('xs')]: {\r\n      height: '190px',\r\n    },\r\n  },\r\n  deleteIcon: {\r\n    position: 'absolute',\r\n    bottom: '20px',\r\n    right: '20px',\r\n    cursor: 'pointer',\r\n    padding: '5px',\r\n    '&:hover': {\r\n      color: 'aquamarine',\r\n      transform: 'scale(1.2) rotate(5deg)',\r\n      transition: 'all 0.2s ease-in',\r\n    },\r\n  },\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { SortableElement } from 'react-sortable-hoc';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\r\nimport Quote from '../../Quote/Quote';\r\nimport styles from './SortableQuoteBoxStyles';\r\n\r\nconst SortableQuoteBox = ({ text, author, id, openDialog, classes }) => {\r\n  const handleDelete = e => {\r\n    e.stopPropagation();\r\n    openDialog(id);\r\n  };\r\n  return (\r\n    <div className={classes.SortableQuoteBox}>\r\n      <Quote text={text} author={author} />\r\n      <DeleteOutlinedIcon className={classes.deleteIcon} onClick={handleDelete} />\r\n    </div>\r\n  );\r\n};\r\n\r\nSortableQuoteBox.propTypes = {\r\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\r\n  author: PropTypes.string,\r\n  text: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  openDialog: PropTypes.func.isRequired,\r\n};\r\n\r\nSortableQuoteBox.defaultProps = {\r\n  author: '',\r\n};\r\n\r\nexport default SortableElement(withStyles(styles)(SortableQuoteBox));\r\n","import sizes from \"../../styles/sizes\";\r\n\r\nexport default {\r\n    colorBoxes: {\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"repeat(3,1fr)\",\r\n        gridGap: \"24px\",\r\n        margin: \"24px\",\r\n        [sizes.down(\"lg\")]: {\r\n            gridTemplateColumns: \"repeat(2,1fr)\",\r\n        },\r\n        [sizes.down(\"xm\")]: {\r\n            gridTemplateColumns: \"1fr\",\r\n            gridGap: \"12px\",\r\n            margin: \"12px\",\r\n        },\r\n        [sizes.down(\"xs\")]: {\r\n            gridGap: \"6px\",\r\n            margin: \"6px\",\r\n        },\r\n    },\r\n    scrollableContainer: {\r\n        overflowY: \"auto\",\r\n        height: \"91.2vh\"\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport { SortableContainer } from 'react-sortable-hoc';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport SortableQuoteBox from './SortableQuoteBox/SortableQuoteBox';\r\nimport styles from './SortableQuoteListStyles';\r\n\r\nfunction SortableQuoteList(props) {\r\n  const { favoriteQuotes, openDialog, classes } = props;\r\n  return (\r\n    <section className={classes.scrollableContainer}>\r\n      <TransitionGroup className={classes.colorBoxes}>\r\n        {favoriteQuotes.map((quote, i) => (\r\n          <CSSTransition key={quote.id} timeout={300} classNames=\"fade\">\r\n            <SortableQuoteBox\r\n              index={i}\r\n              key={quote.id}\r\n              id={quote.id}\r\n              author={quote.author}\r\n              text={quote.text}\r\n              openDialog={openDialog}\r\n            />\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </section>\r\n  );\r\n}\r\n\r\nSortableQuoteList.propTypes = {\r\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\r\n  openDialog: PropTypes.func.isRequired,\r\n  favoriteQuotes: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default SortableContainer(withStyles(styles)(SortableQuoteList));\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeartBroken } from '@fortawesome/free-solid-svg-icons';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './FavoriteQuotesViewStyles';\r\n\r\nimport Navigation from '../../components/Navigation/Navigation';\r\nimport SortableQuoteList from '../../components/SortableQuoteList/SortableQuoteList';\r\n\r\nclass FavoriteQuotesView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      openDeleteDialog: false,\r\n      deletingId: '',\r\n    };\r\n    this.openDialog = this.openDialog.bind(this);\r\n    this.closeDialog = this.closeDialog.bind(this);\r\n    this.handleDelete = this.handleDelete.bind(this);\r\n  }\r\n\r\n  openDialog = id => {\r\n    this.setState({ openDeleteDialog: true, deletingId: id });\r\n  };\r\n\r\n  closeDialog = () => {\r\n    this.setState({ openDeleteDialog: false, deletingId: '' });\r\n  };\r\n\r\n  handleDelete = () => {\r\n    const { removeQuote } = this.props;\r\n    const { deletingId } = this.state;\r\n    removeQuote(deletingId);\r\n    this.closeDialog();\r\n  };\r\n\r\n  render() {\r\n    const { favoriteQuotes, onSortEnd, history, classes } = this.props;\r\n    const { openDeleteDialog } = this.state;\r\n    const sortableQuoteList = (\r\n      <SortableQuoteList\r\n        axis=\"xy\"\r\n        distance={20}\r\n        onSortEnd={onSortEnd}\r\n        favoriteQuotes={favoriteQuotes}\r\n        openDialog={this.openDialog}\r\n      />\r\n    );\r\n    const message = (\r\n      <div className={classes.message}>\r\n        <p className={classes.heartBrokenIcon}>\r\n          <FontAwesomeIcon icon={faHeartBroken} />\r\n        </p>\r\n\r\n        <h1>It looks like you have not added any quotes to favorites yet.</h1>\r\n      </div>\r\n    );\r\n    return (\r\n      <div className={classes.FavoriteQuotes}>\r\n        <Navigation title=\"Favorite Quotes\" history={history} />\r\n        <div className=\"scrollableContainer\" />\r\n        {favoriteQuotes.length > 0 ? sortableQuoteList : message}\r\n\r\n        <Dialog\r\n          open={openDeleteDialog}\r\n          aria-labelledby=\"delete-dialog-title\"\r\n          onClose={this.closeDialog}\r\n        >\r\n          <DialogTitle id=\"delete-dialog-title\">\r\n            Do you want to remove this quote from favorites?\r\n          </DialogTitle>\r\n          <List>\r\n            <ListItem button onClick={this.handleDelete}>\r\n              <ListItemAvatar>\r\n                <Avatar style={{ background: 'hotpink', color: 'black' }}>\r\n                  <CheckIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary=\"Delete\" />\r\n            </ListItem>\r\n            <ListItem button onClick={this.closeDialog}>\r\n              <ListItemAvatar>\r\n                <Avatar style={{ background: 'aquamarine', color: 'black' }}>\r\n                  <CloseIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary=\"Cancel\" />\r\n            </ListItem>\r\n          </List>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFavoriteQuotesView.propTypes = {\r\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\r\n  removeQuote: PropTypes.func.isRequired,\r\n  onSortEnd: PropTypes.func.isRequired,\r\n  favoriteQuotes: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  history: PropTypes.shape({\r\n    push: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(FavoriteQuotesView);\r\n","export default {\r\n  FavoriteQuotes: {\r\n    backgroundColor: '#1D2636',\r\n    minHeight: '100vh',\r\n    paddingBottom: '12px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  colorBoxes: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(4,1fr)',\r\n    gridGap: '24px',\r\n    margin: '24px',\r\n  },\r\n  message: {\r\n    color: 'white',\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    marginTop: '-64px',\r\n  },\r\n  heartBrokenIcon: {\r\n    fontSize: '60px',\r\n    marginBottom: 0,\r\n  },\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Page.css';\r\n\r\nconst Page = ({ children }) => <section className=\"page\">{children}</section>;\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Page;\r\n","import React, { Component } from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport arrayMove from 'array-move';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport DashboardView from './DashboardView/DashboardView';\nimport FavoriteQuotesView from './FavoriteQuotesView/FavoriteQuotesView';\nimport Page from './Page';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    const savedQuotes = JSON.parse(window.localStorage.getItem('favoriteQuotes'));\n    this.state = {\n      favoriteQuotes: savedQuotes || [],\n    };\n  }\n\n  addQuote = quote => {\n    this.setState(st => ({ favoriteQuotes: [...st.favoriteQuotes, quote] }), this.syncLocalStorage);\n  };\n\n  removeQuote = id => {\n    this.setState(\n      st => ({\n        favoriteQuotes: st.favoriteQuotes.filter(favoriteQuote => favoriteQuote.id !== id),\n      }),\n      this.syncLocalStorage,\n    );\n  };\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    this.setState(\n      st => ({ favoriteQuotes: arrayMove(st.favoriteQuotes, oldIndex, newIndex) }),\n      this.syncLocalStorage,\n    );\n  };\n\n  syncLocalStorage = () => {\n    const { favoriteQuotes } = this.state;\n    window.localStorage.setItem('favoriteQuotes', JSON.stringify(favoriteQuotes));\n  };\n\n  render() {\n    const { favoriteQuotes } = this.state;\n    return (\n      <div className=\"App\">\n        <Route\n          render={({ location }) => (\n            <TransitionGroup>\n              <CSSTransition key={location.key} classNames=\"page\" timeout={500}>\n                <Switch location={location}>\n                  <Route\n                    exact\n                    path=\"/\"\n                    render={() => (\n                      <Page>\n                        <DashboardView addQuote={this.addQuote} removeQuote={this.removeQuote} />\n                      </Page>\n                    )}\n                  />\n                  <Route\n                    exact\n                    path=\"/favorite-quotes\"\n                    render={routeProps => (\n                      <Page>\n                        <FavoriteQuotesView\n                          favoriteQuotes={favoriteQuotes}\n                          removeQuote={this.removeQuote}\n                          onSortEnd={this.onSortEnd}\n                          history={routeProps.history}\n                        />\n                      </Page>\n                    )}\n                  />\n                  <Route\n                    render={() => (\n                      <Page>\n                        <DashboardView addQuote={this.addQuote} removeQuote={this.removeQuote} />\n                      </Page>\n                    )}\n                  />\n                </Switch>\n              </CSSTransition>\n            </TransitionGroup>\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './views/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}